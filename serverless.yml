service: api-bryansuralta

plugins:
  - serverless-plugin-typescript
  - serverless-domain-manager
  - serverless-offline
  - serverless-dynamodb-local

package:
  patterns:
    - "!node_modules/aws-sdk/**"
    - "!src/**/*.spec.*"

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  deploymentBucket:
    name: deployments.bryansuralta
    blockPublicAccess: true

  profile: api-bryansuralta
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"

  httpApi:
    cors: true

custom:
  customDomain:
    http:
      domainName: api.bryansuralta.com
      endpointType: regional
  dynamodb:
    stages:
      - test
    start:
      inMemory: true
      migrate: true

functions:
  base:
    handler: src/handlers/base.getHandler
    events:
      - httpApi: "GET /"
  userFindHandler:
    handler: src/handlers/user.findHandler
    events:
      - httpApi: "POST /user/find"
  draftInsertHandler:
    handler: src/handlers/draft.insertHandler
    events:
      - httpApi: "POST /draft/insert"

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: bryansuralta-users
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: user
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    draftsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: bryansuralta-drafts
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
        KeySchema:
          - AttributeName: user
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
